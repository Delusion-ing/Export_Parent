<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace: 需要映射的Dao接口类型-->
<mapper namespace="cn.htl.dao.system.dept.IDeptDao">

    <select id="findAll" parameterType="string" resultMap="findOneMap">
            select * from pe_dept where company_id = #{companyId}
    </select>
    <!--将查询结果映射到成员变量-->
    <resultMap id="findOneMap" type="dept">
        <id column="dept_id" property="deptId"/>
        <result column="dept_name" property="deptName"/>
        <result column="company_id" property="companyId"/>
        <result column="company_name" property="companyName"/>
        <!-- 将parent_id 映射Dept类型
        private  Dept parent
        -->
        <association property="parent"  column="parent_id" javaType="dept" select="findById">
        </association>
    </resultMap>

    <select id="findById" parameterType="string" resultMap="findOneMap">
        select  * from  pe_dept where dept_id = #{dept_id}
    </select>

    <insert id="save" parameterType="dept">
    insert into pe_dept
        (
        dept_id      ,
        dept_name    ,
        parent_id    ,
        state        ,
        company_id   ,
        company_name
        )
        values
        (
        #{deptId     },
        #{deptName   },
        #{parent.deptId  },
        #{state       },
        #{companyId  },
        #{companyName}
        )
    </insert>


<!--    <update id="update" parameterType="dept">-->
<!--     update  pe_dept set-->

<!--            dept_name     =  #{deptName    }  ,-->
<!--            <if test="parent.deptId  == null or parent.deptId == '' ">-->
<!--                parent_id   = NULL  ,-->
<!--            </if>-->
<!--            <if test="parent.deptId !=null and parent.deptId != '' ">-->
<!--                parent_id     = ${parent.deptId}  ,-->
<!--            </if>-->
<!--            state         =  #{state       }  ,-->
<!--            company_id    =  #{companyId   }  ,-->
<!--            company_name  =  #{companyName }-->

<!--     where dept_id= #{deptId}-->
<!--    </update>-->


    <update id="update" parameterType="dept">
        update  pe_dept set

        dept_name     =  #{deptName    }  ,
        <choose>
            <when test="parent.deptId  == null or parent.deptId == ''">
                  parent_id   = NULL  ,
            </when>
            <otherwise>
                parent_id    = #{parent.deptId}  ,
            </otherwise>
        </choose>

        state         =  #{state       }  ,
        company_id    =  #{companyId   }  ,
        company_name  =  #{companyName }

        where dept_id= #{deptId}
    </update>


<!-- 统计当前部门作为其他部门的上级的数量-->
    <select id="findParentCount" parameterType="string" resultType="int">
        select count(*) from pe_dept where parent_id=#{deptId}
    </select>
<!--    删除指定deptId的部门-->
    <delete id="deleteById" parameterType="string">
        delete from pe_dept where dept_id=#{deptId}
    </delete>
</mapper>